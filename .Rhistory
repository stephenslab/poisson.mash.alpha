dev.off()
pdf("flash_factors.pdf", width=16, height=8)
par(mfrow=c(2,2))
for(k in 1:ncol(fit.factor)){
if(fit.pve[k] > 1e-2){
for(m in 1:8){
barplot(fit.factor[(R*(m-1)+1):(R*m), k], names = names(cols.trt), cex.names = 0.75, las = 2, col = cols.trt,
main = paste0("Factor ", k, " pve: ", round(fit.pve[k], 3), "\n cell type: ", cell.types[m]),
ylim=c(min(fit.factor[,k])-0.05, max(fit.factor[,k]) + 0.05))
}
}
}
dev.off()
setwd("/Users/mac/Documents/multivariate_poisson/applications_sc/all_cell_types_separate")
# conditions for selected cytokines for all cell types
cols.trt <- readRDS("/Users/mac/Documents/multivariate_poisson/applications_sc/B_cells/condition_colors.Rds")
R <- length(cols.trt)
# plot the factors
fit.flash <- readRDS("sum_stats_flash_ash.Rds")
summary(fit.flash$loadings.pm)
dim(fit.flash$loadings.pm[[1]])
dim(fit.flash$loadings.pm[[2]])
fit.factor <- fit.flash$loadings.pm[[2]]
fit.pve <- fit.flash$loadings.scale
fit.pve <- fit.flash$pve
fit.pve
sum(fit.pve > 1e-1)
sum(fit.pve > 5e-2)
cell.types <- c("B cells", "CD4 T cells", "CD8 T cells", "Dendritic cells", "Ly6C- monocytes", "Ly6C+ monocytes", "Neutrophils", "NK cells")
colSums(fit.factor^2)
sum(fit.pve > 1e-2)
pdf("sum_stats_flash_factors.pdf", width=16, height=8)
par(mfrow=c(2,2))
for(k in 1:ncol(fit.factor)){
if(fit.pve[k] > 1e-2){
for(m in 1:8){
barplot(fit.factor[(R*(m-1)+1):(R*m), k], names = names(cols.trt), cex.names = 0.75, las = 2, col = cols.trt,
main = paste0("Factor ", k, " pve: ", round(fit.pve[k], 3), "\n cell type: ", cell.types[m]),
ylim=c(min(fit.factor[,k])-0.05, max(fit.factor[,k]) + 0.05))
}
}
}
dev.off()
setwd("/Users/mac/Documents/multivariate_poisson/applications_sc/all_cell_types_separate")
fit.flash <- readRDS("sum_stats_flash_ash.Rds")
fit.factor <- fit.flash$loadings.pm[[2]]
fit.loading <- fit.flash$loadings.pm[[1]]
which(rownames(fit.loading)=="Gbp2")
fit.loading[661,]
sum(abs(fit.loading[661,]) > 0.1)
which(abs(fit.loading[661,]) > 0.1)
loadings <- fit.flash$loadings.pm[[1]] %*% diag(fit.flash$loadings.scale)
rm(fit.loading)
dim(loadings)
View(loadings)
loadings[which(rownames(loadings)=="Gbp2"),]
which(abs(loadings[661,]) > 0.2)
which(abs(loadings[661,]) > 0.5)
which(abs(loadings[661,]) > 1)
which(abs(loadings[661,]) > 2)
fit.flash$pve[39]
View(loadings)
setwd("/Users/mac/Documents/multivariate_poisson/applications_sc/all_cell_types_v2")
# load in aggregated data
data.jr <- readRDS("data_jr.Rds")$data.jr
s <- readRDS("data_jr.Rds")$s
trts <- names(s)
trts
# conditions for selected cytokines for all cell types
cols.all <- readRDS("/Users/mac/Documents/multivariate_poisson/applications_sc/B_cells/condition_colors.Rds")
cols.1 <- cols.all[match(c("IFNg", "IL12p70", "IL18", "IL1a", "IL1b", "IL27", "Ctrl_2"), names(cols.all))]
cols.2 <- cols.all[match(c("IFNg", "IL12p70", "IL18", "IL1a", "IL1b", "Ctrl_2"), names(cols.all))]
cols.3 <- cols.all[match(c("GCSF", "IL12p70", "IL18", "IL1a", "IL1b", "Ctrl_2"), names(cols.all))]
cols.4 <- cols.all[match(c("IFNg", "IL12p70", "IL15", "IL18", "IL1a", "IL1b", "Ctrl_2"), names(cols.all))]
cols.trt <- c(cols.1, rep(cols.2, 5), cols.3, cols.4)
names(cols.trt) <- trts
### fit from ED
fit.ed <- readRDS("pois_mash_ruv_ed.Rds")
fit.ed$runtime/length(fit.ed$ELBO)
# ELBO for ED
plot(fit.ed$ELBO, xlab = "niter", ylab = "elbo")
pi <- fit.ed$pi
names(pi) <- c(names(fit.ed$Ulist), names(fit.ed$ulist))
pi
sum(pi > 1e-2)
eig.tPCA <- eigen(fit.ed$Ulist[[1]])
pve.tPCA <- eig.tPCA$values/sum(eig.tPCA$values)
dev.off()
pve.tPCA
### plot the data-driven covariance matrices from ED
pdf("pois_mash_ruv_ed.pdf")
par(mfrow=c(2,1))
eig.tPCA <- eigen(fit.ed$Ulist[[1]])
pve.tPCA <- eig.tPCA$values/sum(eig.tPCA$values)
for (k in 1:5){
v <- eig.tPCA$vectors[,k]
barplot(v/v[which.max(abs(v))], names = names(cols.trt), cex.names = 0.6, las = 2, col = cols.trt,
main = paste0(names(fit.ed$Ulist)[1], ": weight ", round(fit.ed$pi[1],3),  ":\nEigenvector ", k, " (pve = ", round(pve.tPCA[k],3), ")"))
}
for (k in 1:length(fit.ed$ulist)){
if(fit.ed$pi[k+2]>1e-2 & sum(fit.ed$ulist[[k]]!=0)>0){
v <- as.numeric(fit.ed$ulist[[k]])
barplot(v/v[which.max(abs(v))], names = names(cols.trt), cex.names = 0.6, las = 2, col = cols.trt,
main = paste0(names(fit.ed$ulist)[k], ": weight ", round(fit.ed$pi[k+2],3)))
}
}
dev.off()
summary(fit.ed)
trts
names(s)[c(7,13,19,25,31,37,43,50)]
C1.sub <- cbind(diag(6), -1)
C2.sub <- cbind(diag(5), -1)
C <- bdiag(C1.sub, C2.sub, C2.sub, C2.sub, C2.sub, C2.sub, C2.sub, C1.sub)
C <- as.matrix(C)
library(Matrix)
C1.sub <- cbind(diag(6), -1)
C2.sub <- cbind(diag(5), -1)
C <- bdiag(C1.sub, C2.sub, C2.sub, C2.sub, C2.sub, C2.sub, C2.sub, C1.sub)
C <- as.matrix(C)
trts <- names(s)[-c(7,13,19,25,31,37,43,50)]
trts
class(fit.ed$ulist[[1]])
dim(fit.ed$ulist[[1]])
# conditions for selected cytokines for all cell types
cols.all <- readRDS("/Users/mac/Documents/multivariate_poisson/applications_sc/B_cells/condition_colors.Rds")
cols.1 <- cols.all[match(c("IFNg", "IL12p70", "IL18", "IL1a", "IL1b", "IL27"), names(cols.all))]
cols.2 <- cols.all[match(c("IFNg", "IL12p70", "IL18", "IL1a", "IL1b"), names(cols.all))]
cols.3 <- cols.all[match(c("GCSF", "IL12p70", "IL18", "IL1a", "IL1b"), names(cols.all))]
cols.4 <- cols.all[match(c("IFNg", "IL12p70", "IL15", "IL18", "IL1a", "IL1b"), names(cols.all))]
cols.trt <- c(cols.1, rep(cols.2, 5), cols.3, cols.4)
names(cols.trt) <- trts
### plot the data-driven covariance matrices from ED
pdf("pois_mash_ruv_ed.pdf")
par(mfrow=c(2,1))
eig.tPCA <- eigen(fit.ed$Ulist[[1]])
pve.tPCA <- eig.tPCA$values/sum(eig.tPCA$values)
for (k in 1:4){
v <- C %*% eig.tPCA$vectors[,k]
barplot(v/v[which.max(abs(v))], names = names(cols.trt), cex.names = 0.7, las = 2, col = cols.trt,
main = paste0(names(fit.ed$Ulist)[1], ": weight ", round(fit.ed$pi[1],3),  ":\nEigenvector ", k, " (pve = ", round(pve.tPCA[k],3), ")"))
}
for (k in 1:length(fit.ed$ulist)){
if(fit.ed$pi[k+2]>1e-2 & sum(fit.ed$ulist[[k]]!=0)>0){
v <- C %*% fit.ed$ulist[[k]]
barplot(v/v[which.max(abs(v))], names = names(cols.trt), cex.names = 0.7, las = 2, col = cols.trt,
main = paste0(names(fit.ed$ulist)[k], ": weight ", round(fit.ed$pi[k+2],3)))
}
}
dev.off()
dim(fit.ed$ulist[[1]])
### plot the data-driven covariance matrices from ED
pdf("pois_mash_ruv_ed.pdf")
par(mfrow=c(2,1))
eig.tPCA <- eigen(fit.ed$Ulist[[1]])
pve.tPCA <- eig.tPCA$values/sum(eig.tPCA$values)
for (k in 1:4){
v <- as.numeric(C %*% eig.tPCA$vectors[,k])
barplot(v/v[which.max(abs(v))], names = names(cols.trt), cex.names = 0.7, las = 2, col = cols.trt,
main = paste0(names(fit.ed$Ulist)[1], ": weight ", round(fit.ed$pi[1],3),  ":\nEigenvector ", k, " (pve = ", round(pve.tPCA[k],3), ")"))
}
for (k in 1:length(fit.ed$ulist)){
if(fit.ed$pi[k+2]>1e-2 & sum(fit.ed$ulist[[k]]!=0)>0){
v <- as.numeric(C %*% fit.ed$ulist[[k]])
barplot(v/v[which.max(abs(v))], names = names(cols.trt), cex.names = 0.7, las = 2, col = cols.trt,
main = paste0(names(fit.ed$ulist)[k], ": weight ", round(fit.ed$pi[k+2],3)))
}
}
dev.off()
trts
### plot the data-driven covariance matrices from ED
pdf("pois_mash_ruv_ed.pdf")
par(mfrow=c(2,1))
eig.tPCA <- eigen(fit.ed$Ulist[[1]])
pve.tPCA <- eig.tPCA$values/sum(eig.tPCA$values)
for (k in 1:4){
v <- as.numeric(C %*% eig.tPCA$vectors[,k])
barplot(v/v[which.max(abs(v))], names = names(cols.trt), cex.names = 0.6, las = 2, col = cols.trt,
main = paste0(names(fit.ed$Ulist)[1], ": weight ", round(fit.ed$pi[1],3),  ":\nEigenvector ", k, " (pve = ", round(pve.tPCA[k],3), ")"))
}
for (k in 1:length(fit.ed$ulist)){
if(fit.ed$pi[k+2]>1e-2 & sum(fit.ed$ulist[[k]]!=0)>0){
v <- as.numeric(C %*% fit.ed$ulist[[k]])
barplot(v/v[which.max(abs(v))], names = names(cols.trt), cex.names = 0.6, las = 2, col = cols.trt,
main = paste0(names(fit.ed$ulist)[k], ": weight ", round(fit.ed$pi[k+2],3)))
}
}
dev.off()
View(C)
View(C)
getwd()
setwd("../all_cell_types")
### examples from cluster 2
table1 <- read.csv("ORA_cluster2/GO_0002181.csv", header = FALSE)
genes1 <- as.character(table1$V1[-c(1:3)])
table2 <- read.csv("ORA_cluster2/GO_0019882.csv", header = FALSE)
genes2 <- as.character(table2$V1[-c(1:3)])
table3 <- read.csv("ORA_cluster2/GO_0034341.csv", header = FALSE)
genes3 <- as.character(table3$V1[-c(1:3)])
table4 <- read.csv("ORA_cluster2/GO_0035455.csv", header = FALSE)
genes4 <- as.character(table4$V1[-c(1:3)])
table5 <- read.csv("ORA_cluster2/GO_0035456.csv", header = FALSE)
genes5 <- as.character(table5$V1[-c(1:3)])
table6 <- read.csv("ORA_cluster2/GO_0009615.csv", header = FALSE)
genes6 <- as.character(table6$V1[-c(1:3)])
genes <- unique(c(genes1, genes2, genes3, genes4, genes5, genes6))
genes <- genes[genes %in% rownames(loadings)]
dim(loadings)
tmp.loadings = loadings[match(genes, rownames(loadings)),]
sum(rownames(tmp.loadings)!=genes)
View(tmp.loadings)
which(abs(tmp.loadings[genes=="Gbp2",]) >2)
which(abs(tmp.loadings[genes=="Gbp3",]) >2)
which(abs(tmp.loadings[genes=="Gbp4",]) >2)
which(abs(tmp.loadings[genes=="Gbp5",]) >2)
which(abs(tmp.loadings[genes=="Gbp7",]) >2)
fit.flash$pve
sum(fit.flash$pve > 5e-2)
sum(fit.flash$pve > 5e-3)
setwd("/Users/mac/Documents/multivariate_poisson/applications_sc/all_cell_types_separate")
# conditions for selected cytokines for all cell types
cols.trt <- readRDS("/Users/mac/Documents/multivariate_poisson/applications_sc/B_cells/condition_colors.Rds")
R <- length(cols.trt)
# plot the factors
fit.flash <- readRDS("sum_stats_flash_ash.Rds")
fit.factor <- fit.flash$loadings.pm[[2]]
fit.pve <- fit.flash$pve
cell.types <- c("B cells", "CD4 T cells", "CD8 T cells", "Dendritic cells", "Ly6C- monocytes", "Ly6C+ monocytes", "Neutrophils", "NK cells")
colSums(fit.factor^2)
pdf("sum_stats_flash_factors.pdf", width=16, height=8)
par(mfrow=c(2,2))
for(k in 1:ncol(fit.factor)){
if(fit.pve[k] > 5e-3){
for(m in 1:8){
barplot(fit.factor[(R*(m-1)+1):(R*m), k], names = names(cols.trt), cex.names = 0.75, las = 2, col = cols.trt,
main = paste0("Factor ", k, " pve: ", round(fit.pve[k], 3), "\n cell type: ", cell.types[m]),
ylim=c(min(fit.factor[,k])-0.05, max(fit.factor[,k]) + 0.05))
}
}
}
dev.off()
View(tmp.loadings)
which.max(abs(tmp.loadings[1,]))
rm(list=ls())
getwd()
sample.info <- readRDS("../all_cell_types/scdata.Rds")$sample.info
scdata <- readRDS("../all_cell_types_v2/scdata.Rds")$scdata
dim(scdata)
sum(colnames(scdata)!=sample.info$X0)
sum(colnames(scdata)!=sample.info$X0)
rm(list=ls())
sample.info <- read.csv("/Users/mac/Documents/single_cell_cytokines/whole_cyto_annot.csv")
table(sample.info$cell_type)
table(sample.info$sample)
### specifiy the selected conditions measured on the same batch
trts <- c("Ctrl_2", "CCL20", "CXCL1", "CCL22", "CXCL5", "CCL11", "CCL4", "CCL17", "CCL5", "CXCL13", "CXCL10", "CXCL9",
"CXCL12", "GCSF", "MCSF", "GMCSF", "IFNg", "IL10", "IL12p70", "IL17a", "IL13", "IL15", "IL17f", "IL22",
"IL18", "IL1a", "IL2", "IL3", "IL1b", "IL23", "IL21", "IL33", "IL25", "IL34", "IL27", "IL36a",
"IL4", "IL6", "IL5", "IL7", "IL9", "IL11", "TGFb", "CCL2", "CCL3", "TSLP")
### specify the selected cell types
cell_types <- c("B_cells", "CD4_T_cells", "CD8_T_cells", "Dendritic_cells", "Ly6C-_Monocytes", "Ly6C+_Monocytes", "Neutrophils", "NK_cells")
library(Matrix)
scdata <- readRDS("/Users/mac/Documents/single_cell_cytokines/scdata.rds")
sum(colnames(scdata)!=sample.info$X0)
### select the subset of cells in the selected treatments and cell types
idx.cell <- sample.info$cell_type %in% cell_types & sample.info$sample %in% trts
sum(idx.cell)
scdata <- scdata[, idx.cell]
sample.info <- sample.info[idx.cell,]
sum(colnames(scdata)!=sample.info$X0)
sample.info$cell_type_abv <- NA
table(droplevels(sample.info$cell_type))
table(droplevels(sample.info$sample))
sample.info$cell_type_abv[sample.info$cell_type=="B_cells"] <- "B"
sample.info$cell_type_abv[sample.info$cell_type=="CD4_T_cells"] <- "CD4"
sample.info$cell_type_abv[sample.info$cell_type=="CD8_T_cells"] <- "CD8"
sample.info$cell_type_abv[sample.info$cell_type=="Dendritic_cells"] <- "Dendritic"
sample.info$cell_type_abv[sample.info$cell_type=="Ly6C-_Monocytes"] <- "Ly6C_neg"
sample.info$cell_type_abv[sample.info$cell_type=="Ly6C+_Monocytes"] <- "Ly6C_pos"
sample.info$cell_type_abv[sample.info$cell_type=="Neutrophils"] <- "Neutro"
sample.info$cell_type_abv[sample.info$cell_type=="NK_cells"] <- "NK"
sample.info$trt <- paste0(sample.info$cell_type_abv, "_", sample.info$sample)
table(droplevels(sample.info$trt))
length(unique(sample.info$trt))
sum(colnames(scdata)!=sample.info$X0)
dim(scdata)
trts <- sort(unique(sample.info$trt))
trts
sum(colnames(scdata)!=sample.info$X0)
### remove genes with very low counts in any cell type
idx.genes <- which(rowSums(scdata[,sample.info$cell_type_abv=="B"])>=25 & rowSums(scdata[,sample.info$cell_type_abv=="CD4"])>=25 &
rowSums(scdata[,sample.info$cell_type_abv=="CD8"])>=25 & rowSums(scdata[,sample.info$cell_type_abv=="Dendritic"])>=25 &
rowSums(scdata[,sample.info$cell_type_abv=="Ly6C_neg"])>=25 & rowSums(scdata[,sample.info$cell_type_abv=="Ly6C_pos"])>=25 &
rowSums(scdata[,sample.info$cell_type_abv=="Neutro"])>=25 & rowSums(scdata[,sample.info$cell_type_abv=="NK"])>=25)
scdata <- scdata[idx.genes,]
dim(scdata)
sum(colnames(scdata)!=sample.info$X0)
### construct n by R design matrix
conditions <- factor(sample.info$trt, levels=trts)
data.X = model.matrix(~0+conditions)
colnames(data.X) <- trts
cov_of_interest = 1:ncol(data.X)
min(rowSums(scdata))
View(data.X)
colSums(data.X)
table(conditions)
sum(table(conditions)!=colSums(data.X))
sum(table(conditions)!=colSums(data.X))
368/8
dim(scdata)
colnames(sample.info)
rm(trts)
rm(conditions, cov_of_interest)
getwd()
### read in bhat and shat
dat <- readRDS("SumStats_all.Rds")
idx.na <- rowSums(is.na(dat$bhat))
genes <- rownames(dat$bhat[idx.na==0])
dat$bhat[1:5,1:5]
genes <- rownames(dat$bhat)[idx.na==0]
dim(dat$bhat)
getwd()
dat <- readRDS("SumStats_all.Rds")
colnames(sample.info)
condition = sample.info$trt
length(condition)
trts <- sort(levels(condition))
class(condition)
trts <- sort(levels(as.factor(condition)))
trts <- sort(unique(condition))
trts[1:46]
subgroup <- c(rep("B_cells", 46), rep("CD4_T_cells", 46), rep("CD8_T_cells", 46), rep("Dendritic_cells", 46), rep("Ly6C-_monocytes", 46), rep("Ly6C+_monocytes", 46), rep("Neutrophils", 46), rep("NK_cells", 46))
tmp <- as.numeric(as.factor(subgroup))
table(tmp)
tmp2 <- as.factor(tmp)
tmp2 <- as.numeric(tmp2)
table(tmp2)
setwd("/Users/mac/Documents/multivariate_poisson/applications_sc/all_cell_types_separate")
# conditions for selected cytokines for all cell types
cols.trt <- readRDS("/Users/mac/Documents/multivariate_poisson/applications_sc/B_cells/condition_colors.Rds")
R <- length(cols.trt)
# plot the factors
fit.flash <- readRDS("limma_sum_stats_flash_ash.Rds")
fit.factor <- fit.flash$loadings.pm[[2]]
fit.pve <- fit.flash$pve
fit.pve
sum(fit.pve > 5e-3)
sum(fit.pve > 3e-3)
sum(fit.pve > 2e-3)
sum(fit.pve > 1e-3)
cell.types <- c("B cells", "CD4 T cells", "CD8 T cells", "Dendritic cells", "Ly6C- monocytes", "Ly6C+ monocytes", "Neutrophils", "NK cells")
pdf("limma_sum_stats_flash_factors.pdf", width=16, height=8)
par(mfrow=c(2,2))
for(k in 1:ncol(fit.factor)){
if(fit.pve[k] > 1e-3){
for(m in 1:8){
barplot(fit.factor[(R*(m-1)+1):(R*m), k], names = names(cols.trt), cex.names = 0.75, las = 2, col = cols.trt,
main = paste0("Factor ", k, " pve: ", round(fit.pve[k], 3), "\n cell type: ", cell.types[m]),
ylim=c(min(fit.factor[,k])-0.05, max(fit.factor[,k]) + 0.05))
}
}
}
dev.off()
setwd("/Users/mac/Documents/multivariate_poisson/applications_sc/all_cell_types_separate")
dat <- readRDS("SumStats_all.Rds")
dat <- readRDS("SumStats_all.Rds")
### keep only genes with bhat and shat available in every cell type
idx.na <- rowSums(is.na(bhat))
bhat <- bhat[idx.na==0,]
shat <- shat[idx.na==0,]
library(Matrix)
bhat <- dat$bhat
shat <- dat$shat
### keep only genes with bhat and shat available in every cell type
idx.na <- rowSums(is.na(bhat))
bhat <- bhat[idx.na==0,]
shat <- shat[idx.na==0,]
View(bhat)
View(shat)
apply(shat, 2, median)
rm(list=ls())
fit.flash <- readRDS("sum_stats_flash_ash.Rds")
library(flashier)
pred.beta <- fitted(fit.flash)
dim(pred.beta)
View(pred.beta)
### read in bhat and shat
dat <- readRDS("SumStats_all.Rds")
bhat <- dat$bhat
shat <- dat$shat
### keep only genes with bhat and shat available in every cell type
idx.na <- rowSums(is.na(bhat))
bhat <- bhat[idx.na==0,]
shat <- shat[idx.na==0,]
dim(bhat)
View(bhat)
pred.beta[1:5,1:5]
range(pred.beta - bhat)
range(bhat)
tmp <- colSums(abs(bhat) > 10)
length(tmp)
tmp
which(abs(pred.beta-bhat) > 2, arr.ind = TRUE)
quantile(pred.beta - bhat)
quantile(pred.beta - bhat, seq(0.001, 0.01, 0.991))
quantile(pred.beta - bhat, seq(0.001, 0.01, 0.001))
quantile(pred.beta - bhat, seq(0.99, 0.999, 0.001))
quantile(bhat)
quantile(bhat, seq(0.001, 0.01, 0.001))
quantile(bhat, seq(0.99, 0.999, 0.001))
quantile(shat)
sum(shat < 1e-4)
sum(shat < 1e-2)
sum(shat < 1e-3)
idx.shat <- colSums(shat < 1e-2)
idx.shat
idx.shat <- colSums(shat < 1e-3)
idx.shat
colSums(fit.flash$loadings.pm[[2]])
colSums(fit.flash$loadings.pm[[2]]^2)
fit.flash$pve
sum(fit.flash$pve > 1e-2)
sum(fit.flash$pve > 5e-2)
rm(list=ls())
subgroup <- rep("B_cells", 10)
as.numeric(as.factor(subgroup))
setwd("/Users/mac/Documents/multivariate_poisson/applications_sc/all_cell_types_separate")
# conditions for selected cytokines for all cell types
cols.trt <- readRDS("/Users/mac/Documents/multivariate_poisson/applications_sc/B_cells/condition_colors.Rds")
R <- length(cols.trt)
# plot the factors
fit.flash <- readRDS("Z_scores_flash_ash.Rds")
summary(fit.flash)
fit.factor <- fit.flash$loadings.pm[[2]]
fit.pve <- fit.flash$pve
colSums(fit.factor^2)
sum(fit.pve > 1e-2)
sum(fit.pve > 5e-3)
sum(fit.pve > 6e-3)
sum(fit.pve > 5.5e-3)
cell.types <- c("B cells", "CD4 T cells", "CD8 T cells", "Dendritic cells", "Ly6C- monocytes", "Ly6C+ monocytes", "Neutrophils", "NK cells")
pdf("Z_scores_flash_factors.pdf", width=16, height=8)
par(mfrow=c(2,2))
for(k in 1:ncol(fit.factor)){
if(fit.pve[k] > 5e-3){
for(m in 1:8){
barplot(fit.factor[(R*(m-1)+1):(R*m), k], names = names(cols.trt), cex.names = 0.75, las = 2, col = cols.trt,
main = paste0("Factor ", k, " pve: ", round(fit.pve[k], 3), "\n cell type: ", cell.types[m]),
ylim=c(min(fit.factor[,k])-0.05, max(fit.factor[,k]) + 0.05))
}
}
}
dev.off()
cat('start model fitting\n')
cat('start model fitting!\n')
cat("Start fitting Poisson mash model.\n")
rm(list=ls())
setwd("/Users/mac/Documents/multivariate_poisson/git/poisson.mash.alpha")
setwd("/Users/mac/Documents/git/poisson.mash.alpha")
data <- readRDS("data/scdata.Rds")
class(data)
summary(data)
sample.info <- readRDS("data/sample_info.Rds")
dim(sample.info)
View(sample.info)
saveRDS(list(Y=data$X, condition=sample.info$sample), "data/rawdata.Rds")
dim(data$X)
rm(list=ls())
getwd()
data <- readRDS("data/rawdata.Rds")
summary(data)
table(data$condition)
sample.info <- readRDS("data/sample_info.Rds")
data <- readRDS("data/scdata.Rds")
saveRDS(list(Y=data$X, condition=as.factor(as.character(sample.info$sample))), "data/rawdata.Rds")
data <- readRDS("data/rawdata.Rds")
table(data$condition)
sum(table(data$condition))
design <- model.matrix(~data$condition)
dim(design)
View(design)
View(design)
colnames(design)
scdata <- data
library(Matrix)
library(scran)
getwd()
rm(data)
rm(sample.info)
summary(scdata)
source("code/util.R")
source("code/set_data.R")
source("code/pois_cov_init.R")
source("code/pois_mash_ruv_prefit.R")
source("code/pois_cov_ed.R")
source("code/pois_mash_ruv.R")
source("code/pois_mash_posterior.R")
### compute cell-specific size factors using scrna
clusters <- quickCluster(scdata$Y)
si <- computeSumFactors(scdata$Y, clusters=clusters)
summary(si)
data <- pois_mash_set_data(scdata$Y, scdata$condition, si)
class(data)
summary(data)
dim(data$X)
X <- data$X
View(X)
data$subgroup
range(data$s)
source("code/set_data.R")
data <- pois_mash_set_data(scdata$Y, scdata$condition, si)
range(data$s)
View(pois_mash)
